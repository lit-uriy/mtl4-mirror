// vim: syn=cpp:
#ifndef LAMBDA_LET_HPP
#define LAMBDA_LET_HPP

#include "tags.hpp"

[typed_closure let {^Var Value Body} {Var ValueT BodyT} \
  [get_type_is "[get_type value Env @]" \
	       "ValueT: [get_type body [extend_abs Env Var "typename ValueT::type"] @]" \
	       "BodyT: k(typed_let(var,valuet,bodyt))"] \
  [returns "typename BodyT::type"] \
  [run_is "typename ValueT::type vt = valuet.run(env); return bodyt.run(env.extend(var,vt));"]]

#endif // LAMBDA_LET_HPP
