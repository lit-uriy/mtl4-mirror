import glob, re

Import('mpi_debug_env check full_warnings')

sources = glob.glob("*test.cpp")
sources.remove('mpi_3_vector_migration_test.cpp')

mpi_programs = mpi_debug_env.Program(['mpi_2_mpi_log_first.cpp', 'mpi_2_mpi_log_second.cpp'])

for p in sources:
	if 'mpi_3_parmetis_matrix_migration_test.cpp' == p and mpi_debug_env.Dictionary()['CCFLAGS'].count('-DMTL_HAS_TOPOMAP'):
		mpi_programs.append(mpi_debug_env.Program([p, '../../../../../../../../Software/topomap/virt_graph_scal.o']))
	else:
		mpi_programs.append(mpi_debug_env.Program(p))

if int(check):
    for p in mpi_programs:
        tmatch = re.search('mpi_(\d*).*', str(p))
        # mpi_debug_env.AddPostAction(p, 'mpirun -mca btl tcp,self -np ' + tmatch.group(1) + ' ' + p[0].abspath)
        mpi_debug_env.AddPostAction(p, 'export')
        mpi_debug_env.AddPostAction(p, 'mpirun -np ' + tmatch.group(1) + ' ' + p[0].abspath)

Default(mpi_programs)

# To run only mpi programs: scons -D check=1 `ls mpi*.cpp | grep -v mpi_2_test_mpi_log_test.cpp | sed s/\.cpp//g`  
# only run in tcsh foreach f ( `ls mpi* | grep -v '.*\..*'`) mpigo $f end ..
