-*- text -*-

Software License for MTL

Copyright (c) 2007 The Trustees of Indiana University. All rights reserved.
Authors: Peter Gottschling and Andrew Lumsdaine

This file is part of the Matrix Template Library

See also license.mtl.txt in the distribution.
---------------------------------------------------------------

              The Matrix Template Library
                     Version 4
		   Release alpha.1


I. Installation
===============

Note that MTL resides completely in header files, so there
is no need to build a library, which simplifies installation
and usage considerable. However, if you want to compile
the MTL examples and test suite, then there will be
more steps to follow.



MTL4 is a pure template library and only a download of the sources
is required.

The Boost library: 
   http://www.boost.org

is used and must also be downloaded.
We used in the development and testing version 33.1 but the programs
would probably compile with earlier versions, too.
 The parts of boost used in MTL4 do not need
to be compiled but only included.

If you want to run the test programs, you need the build system scons:
   http://www.scons.org

It is easy to install and takes only a few minutes.
The scons-based build of MTL4 uses the environment variables 
   MTL_BOOST_ROOT

to locate the MTL directory and
   BOOST_ROOT

to locate the Boost directory.
The path of the MTL directory is normally not needed if you do not
have version control with multiple development branches for MTL4.



To execute the test programs go in MTL4's test directory
   libs/numeric/mtl/test 

and type:
   scons -D . check=1

If the building finishes all tests were passed.
The building can be considerably speed up, esp. on multi-core processors,
when scons is used with multiple processes.
For instance, to run the tests with four processes (which works quite
well on two processors) type:
   scons -Dj 4 . check=1

The output will be quite chaotic but, again, when the building finishes
all tests are passed.

Similarly, the example programs can be compiled.
Go in directory libs/numeric/mtl/examples and type:
   scons -D .</tt>

For the sake of simplicity, there are no checks in the examples.



If you want to use BLAS, you need to define the macro 
   MTL_HAS_BLAS

e.g., by compiling your programs with 
   -DMTL_HAS_BLAS 

and link the appropriate libraries.
Alternatively, you can use MTL4's build system 
with the flag 
   with-blas=1 

that will check if GotoBlas, ACML, or ATLAS is installed on your system
(thanks to Torsten Hoefler who wrote the tests in scons).
If scons does not find your BLAS library you can specify additional
flags, see
   scons -h

for details.



If you wish to generate the documentation locally on your system
you need doxygen:
   http://www.doxygen.org

When it is installed type 
   doxygen 

in the main directory and
the documentation will be written to 
   libs/numeric/mtl/doc.



Resuming, for MTL4 you need to:
- Include the MTL path;
- Include the boost path;
- Optionally install scons;
- Optionally install a BLAS library; and
- Optionally install doxygen.




